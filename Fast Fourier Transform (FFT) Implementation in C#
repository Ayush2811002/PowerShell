using System;
using System.Numerics;

class FFTExample
{
    // Fast Fourier Transform implementation
    static Complex[] FFT(Complex[] input)
    {
        int N = input.Length;
        if (N <= 1)
            return input;

        Complex[] even = new Complex[N / 2];
        Complex[] odd = new Complex[N / 2];

        for (int i = 0; i < N / 2; i++)
        {
            even[i] = input[2 * i];
            odd[i] = input[2 * i + 1];
        }

        Complex[] evenTransformed = FFT(even);
        Complex[] oddTransformed = FFT(odd);

        Complex[] result = new Complex[N];

        for (int k = 0; k < N / 2; k++)
        {
            Complex t = Complex.Exp(-2 * Math.PI * k / N) * oddTransformed[k];
            result[k] = evenTransformed[k] + t;
            result[k + N / 2] = evenTransformed[k] - t;
        }

        return result;
    }

    static void Main()
    {
        Complex[] input = { 1, 2, 3, 4, 5, 6, 7, 8 };
        Complex[] output = FFT(input);

        Console.WriteLine("FFT Result:");
        foreach (var item in output)
        {
            Console.WriteLine(item);
        }
    }
}
